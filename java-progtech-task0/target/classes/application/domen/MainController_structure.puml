@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "application.domen.MainController",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1068799382 { 
   	label=models
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Procent12873928[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Procent</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   value: Float [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ countPr(pr: int): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ countSum(sum: float, pr: float): Float</TD></TR>
<TR><TD ALIGN="LEFT" >+ countSumrnd(pr: int): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_95766891 { 
   	label=domen
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   MainController1393361075[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MainController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   calculateProcent_10: VBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   calculateProcent_15: VBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   calculateProcent_3: VBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   calculator: Procentable [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   inputValue: Spinner&lt;Integer&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   resultValue: Label [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ calculateProcent(actionEvent: ActionEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize(url: URL, resourceBundle: ResourceBundle)</TD></TR>
<TR><TD ALIGN="LEFT" >- setLabelText(textList: TextFlow, method: Calculatable): MainController</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
MainController1393361075 -> Procent12873928[arrowhead=none];
    
}
@enduml